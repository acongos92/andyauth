// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/acongos92/andyauth/models"
)

// LoginReader is a Reader for the Login structure.
type LoginReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LoginReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewLoginOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewLoginForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewLoginInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewLoginOK creates a LoginOK with default headers values
func NewLoginOK() *LoginOK {
	return &LoginOK{}
}

/*LoginOK handles this case with default header values.

login success
*/
type LoginOK struct {
	Payload *LoginOKBody
}

func (o *LoginOK) Error() string {
	return fmt.Sprintf("[POST /login][%d] loginOK  %+v", 200, o.Payload)
}

func (o *LoginOK) GetPayload() *LoginOKBody {
	return o.Payload
}

func (o *LoginOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(LoginOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLoginForbidden creates a LoginForbidden with default headers values
func NewLoginForbidden() *LoginForbidden {
	return &LoginForbidden{}
}

/*LoginForbidden handles this case with default header values.

bad username/password combination
*/
type LoginForbidden struct {
}

func (o *LoginForbidden) Error() string {
	return fmt.Sprintf("[POST /login][%d] loginForbidden ", 403)
}

func (o *LoginForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLoginInternalServerError creates a LoginInternalServerError with default headers values
func NewLoginInternalServerError() *LoginInternalServerError {
	return &LoginInternalServerError{}
}

/*LoginInternalServerError handles this case with default header values.

internal server error
*/
type LoginInternalServerError struct {
	Payload *models.Error
}

func (o *LoginInternalServerError) Error() string {
	return fmt.Sprintf("[POST /login][%d] loginInternalServerError  %+v", 500, o.Payload)
}

func (o *LoginInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *LoginInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*LoginOKBody login o k body
swagger:model LoginOKBody
*/
type LoginOKBody struct {

	// token
	Token string `json:"token,omitempty"`
}

// Validate validates this login o k body
func (o *LoginOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *LoginOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *LoginOKBody) UnmarshalBinary(b []byte) error {
	var res LoginOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
