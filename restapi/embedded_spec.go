// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Authentication Api",
    "title": "Performs simple authentication",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "host": "virtserver.swaggerhub.com",
  "basePath": "/vcongos/andyauth/1.0.0",
  "paths": {
    "/create": {
      "post": {
        "description": "create a new user with username and password",
        "produces": [
          "application/json"
        ],
        "summary": "create users",
        "operationId": "createUser",
        "parameters": [
          {
            "description": "username and password payload",
            "name": "login",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Login"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "create success",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "example": "abc.efg.hij"
                }
              }
            }
          },
          "400": {
            "description": "invalid username/password",
            "schema": {
              "type": "string",
              "example": "bad password idio"
            }
          },
          "500": {
            "description": "internal server error",
            "schema": {
              "type": "string",
              "example": "uwu we make mistake"
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "description": "allows login of existing users",
        "produces": [
          "application/json"
        ],
        "summary": "login endpont",
        "operationId": "login",
        "parameters": [
          {
            "description": "username and password payload",
            "name": "login",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Login"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "login success",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "example": "abc.efg.hij"
                }
              }
            }
          },
          "403": {
            "description": "bad username/password combination"
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    }
  },
  "definitions": {
    "Login": {
      "type": "object",
      "required": [
        "username",
        "password"
      ],
      "properties": {
        "password": {
          "type": "string",
          "example": "badPassword"
        },
        "username": {
          "type": "string",
          "example": "oldgreg"
        }
      }
    }
  },
  "tags": [
    {
      "description": "Secured Admin-only calls",
      "name": "admins"
    },
    {
      "description": "Operations available to regular developers",
      "name": "users"
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Authentication Api",
    "title": "Performs simple authentication",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "host": "virtserver.swaggerhub.com",
  "basePath": "/vcongos/andyauth/1.0.0",
  "paths": {
    "/create": {
      "post": {
        "description": "create a new user with username and password",
        "produces": [
          "application/json"
        ],
        "summary": "create users",
        "operationId": "createUser",
        "parameters": [
          {
            "description": "username and password payload",
            "name": "login",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Login"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "create success",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "example": "abc.efg.hij"
                }
              }
            }
          },
          "400": {
            "description": "invalid username/password",
            "schema": {
              "type": "string",
              "example": "bad password idio"
            }
          },
          "500": {
            "description": "internal server error",
            "schema": {
              "type": "string",
              "example": "uwu we make mistake"
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "description": "allows login of existing users",
        "produces": [
          "application/json"
        ],
        "summary": "login endpont",
        "operationId": "login",
        "parameters": [
          {
            "description": "username and password payload",
            "name": "login",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Login"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "login success",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "example": "abc.efg.hij"
                }
              }
            }
          },
          "403": {
            "description": "bad username/password combination"
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    }
  },
  "definitions": {
    "Login": {
      "type": "object",
      "required": [
        "username",
        "password"
      ],
      "properties": {
        "password": {
          "type": "string",
          "example": "badPassword"
        },
        "username": {
          "type": "string",
          "example": "oldgreg"
        }
      }
    }
  },
  "tags": [
    {
      "description": "Secured Admin-only calls",
      "name": "admins"
    },
    {
      "description": "Operations available to regular developers",
      "name": "users"
    }
  ]
}`))
}
