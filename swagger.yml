swagger: '2.0'
info:
  description: Authentication Api
  version: 1.0.0
  title: Performs simple authentication


  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html

# tags are used for organizing operations
tags:
- name: admins
  description: Secured Admin-only calls
- name: users
  description: Operations available to regular developers

paths:
  /login:
    post:
      summary: login endpont
      operationId: login
      description: allows login of existing users
      produces:
      - application/json
      parameters:
      - in: body
        name: login
        description: username and password payload
        schema:
          $ref: '#/definitions/Login'
      responses:
        200:
          description: login success
          schema:
            type: object
            properties:
              token:
                type: string
                example: abc.efg.hij
        403:
          description: bad username/password combination
        500:
          description: internal server error
          schema:
            $ref: '#/definitions/Error'
  /create:
    post:
      summary: create users
      operationId: createUser
      description: create a new user with username and password
      produces:
      - application/json
      parameters:
      - in: body
        name: login
        description: username and password payload
        schema:
          $ref: '#/definitions/Login'
      responses:
        200:
          description: create success
          schema:
            type: object
            properties:
              token:
                type: string
                example: abc.efg.hij
        400:
          description: invalid username/password
          schema:
            type: string
            example: bad password idio
        500:
          description: internal server error
          schema:
            $ref: '#/definitions/Error'
  /verify:
    post:
      summary: verify the jwt
      operationId: verify
      description: verify the signature of this jwt
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: token
        description: token to be verified
        schema:
          $ref: '#/definitions/Token'
          
      responses:
        204:
          description: valid token
        403:
          description: token was not valid
        500:
          description: internal server error
          schema:
            $ref: '#/definitions/Error'
      
          

definitions:
  Login:
    type: object
    required:
      - user
    properties:
      user:
        $ref: '#/definitions/User'
  Token:
    type: object
    required:
      - token
    properties:
      token:
        type: string
        example: aaa.bbb.ccc
  User: 
    type: object
    required:
      - username
      - password
    properties:
      username: 
        type: string
        example: name
      password:
        type: string 
        example: password
  Error:
    type: object
    required:
      - code
      - message
    properties: 
      code:
        type: integer
        example: 200
      message:
        type: string
        example: error message lol
# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
basePath: /vcongos/andyauth/1.0.0
schemes:
 - https